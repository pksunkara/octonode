// Generated by CoffeeScript 1.12.7
(function() {
  var Base, Milestone,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Milestone = (function(superClass) {
    extend(Milestone, superClass);

    function Milestone(repo, number, client) {
      this.repo = repo;
      this.number = number;
      this.client = client;
    }

    Milestone.prototype.info = function(cb) {
      return this.client.get("/repos/" + this.repo + "/milestones/" + this.number, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error("Milestone info error"));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Milestone.prototype.update = function(obj, cb) {
      return this.client.post("/repos/" + this.repo + "/milestones/" + this.number, obj, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error("Milestone update error"));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Milestone.prototype["delete"] = function(cb) {
      return this.client.del("/repos/" + this.repo + "/milestones/" + this.number, {}, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 204) {
          return cb(new Error("Milestone delete error"));
        } else {
          return cb(null, b, h);
        }
      });
    };

    return Milestone;

  })(Base);

  module.exports = Milestone;

}).call(this);
