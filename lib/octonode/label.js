// Generated by CoffeeScript 1.12.7
(function() {
  var Cmd, Label,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Cmd = require('./cmd');

  Label = (function(superClass) {
    extend(Label, superClass);

    function Label(repo, name, client) {
      this.repo = repo;
      this.name = name;
      this.client = client;
    }

    Label.prototype.info = function(cb) {
      return this.client.get(encodeURI("/repos/" + this.repo + "/labels/" + this.name), function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error("Label info error"));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Label.prototype.update = function(obj, cb) {
      return this.client.post("/repos/" + this.repo + "/labels/" + this.name, obj, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error("Label update error"));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Label.prototype["delete"] = function(cb) {
      return this.client.del(encodeURI("/repos/" + this.repo + "/labels/" + this.name), {}, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 204) {
          return cb(new Error("Label delete error"));
        } else {
          return cb(null, b, h);
        }
      });
    };

    return Label;

  })(Cmd);

  module.exports = Label;

}).call(this);
